<?php

namespace Ansi\GhassenBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends DocumentRepository {

    public function byConversation($user) {
        $qb = $this->createQueryBuilder('u');
        $qb->addOr($qb->expr()
                        ->field('sender.id')->equals($user->getid())
                        ->field('receiver')->notEqual(null))
                ->addOr($qb->expr()->field('receiver.id')->equals($user->getid())
                )
                ->sort('date', 'desc');
        //->group(array(), array('sender.id' ))
        //->distinct('sender');
        //->sort('date','desc')
        //->limit(1);
        //->field('date')->equals('MAX(date)')

        return $qb->getQuery()->execute();
    }

    public function byConv($user) {

        $qb = $this->createQueryBuilder('u');
        $qb->group(array('sender' ), array())
                ->reduce('function ( curr, result ) { result.receiver != curr.receiver;}');

        $qb->addOr($qb->expr()
                        ->field('sender.id')->equals($user->getid())
                        ->field('receiver')->notEqual(null))
                ->addOr($qb->expr()->field('receiver.id')->equals($user->getid())
                )
                ->sort('date', 'desc');

        return $qb->getQuery()->execute();
    }

    public function recherche($user) {
        $qb = $this->createQueryBuilder('u')
                        ->field('receiver')->references($user);
        return $qb->getQuery()->execute();
    }

    public function byuser($sender, $receiver) {
        $qb = $this->createQueryBuilder('u');
        $qb->addOr($qb->expr()
                        ->field('sender')->references($sender)
                        ->field('receiver')->references($receiver))
                ->addOr($qb->expr()->field('sender')->references($receiver)
                        ->field('receiver')->references($sender)
        );
        //->sort('date','desc');
        return $qb->getQuery()->execute();
    }

    public function supConversation($sender, $receiver) {
        $qb = $this->createQueryBuilder('u');
        $qb->remove()
                ->addOr($qb->expr()
                        ->field('sender')->references($sender)
                        ->field('receiver')->references($receiver))
                ->addOr($qb->expr()->field('sender')->references($receiver)
                        ->field('receiver')->references($sender)
        );

        return $qb->getQuery()->execute();
    }

    public function mesgroup($groupe) {
        $qb = $this->createQueryBuilder('u');
        $qb->field('receivergroup')->references($groupe);
        return $qb->getQuery()->execute();
    }

    public function mesglast($user) {
        $qb = $this->createQueryBuilder('u');
        $qb->field('receiver')->references($user)
                ->sort('date', 'desc')
                ->limit(3);
    }

}
